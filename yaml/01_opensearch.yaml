apiVersion: v1
kind: ServiceAccount
metadata:
  name: opensearch-service-account
  namespace: kube-logging
---
apiVersion: v1
kind: Service
metadata:
  name: opensearch
  namespace: kube-logging
  labels:
    app: opensearch
spec:
  type: ClusterIP
  selector:
    app: opensearch
  ports:
    - port: 9200
      protocol: TCP
      name: http
    - port: 9300
      protocol: TCP
      name: transport
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: os-cluster
  namespace: kube-logging
spec:
  serviceName: opensearch
  selector:
    matchLabels:
      app: opensearch
  replicas: 1
  template:
    metadata:
      name: opensearch
      labels:
        app: opensearch
    spec:
      serviceAccount: opensearch-service-account
      containers:
      - name: opensearch
        image: docker.io/opensearchproject/opensearch:{OS_VERSION}
        imagePullPolicy: "IfNotPresent"
        securityContext:
          allowPrivilegeEscalation: true
          privileged: true
        resources:
          limits:
            cpu: 500m
            memory: 16Gi
          requests:
            cpu: 100m
            memory: 8Gi
        ports:
        - containerPort: 9200
          name: http
        - containerPort: 9300
          name: transport
        volumeMounts:
        - name: data
          mountPath: /usr/share/opensearch/data
        - name: config
          mountPath: /usr/share/opensearch/config/opensearch.yml
          subPath: opensearch.yml
        env:
          - name: cluster.name
            value: os-cluster
          - name: node.name
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          - name: discovery.seed_hosts
            value: "os-cluster-0.opensearch" #"os-cluster-0.opensearch,os-cluster-1.opensearch,os-cluster-2.opensearch"
          - name: cluster.initial_master_nodes
            value: "os-cluster-0" #"os-cluster-0,os-cluster-1,os-cluster-2"
          - name: OPENSEARCH_JAVA_OPTS
            value: "-Xms8g -Xmx8g"
      initContainers:
      - name: fix-permissions
        image: busybox:{BUSYBOX_VERSION}
        command: ["sh", "-c", "chown -R 1000:1000 /usr/share/opensearch/data"]
        securityContext:
          privileged: true
        volumeMounts:
        - name: data
          mountPath: /usr/share/opensearch/data
      - name: increase-vm-max-map
        image: busybox:{BUSYBOX_VERSION}
        command: ["sysctl", "-w", "vm.max_map_count=262144"]
        securityContext:
          privileged: true 
      - name: increase-fd-ulimit
        image: busybox:{BUSYBOX_VERSION}
        command: ["sh", "-c", "ulimit -n 65536"]
        securityContext:
          privileged: true
      volumes:
      - name: config
        configMap:
          name: opensearch-config
  volumeClaimTemplates:
  - metadata:
      name: data
      labels:
        app: opensearch
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 50Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: opensearch-config
  namespace: kube-logging
  labels:
    app: opensearch
data:
  opensearch.yml: |
    cluster.name: "os-cluster"
    network.host: "0.0.0.0"
    plugins:
      security:
        ssl:
          transport:
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
            enforce_hostname_verification: false
          http:
            enabled: true
            pemcert_filepath: esnode.pem
            pemkey_filepath: esnode-key.pem
            pemtrustedcas_filepath: root-ca.pem
        allow_unsafe_democertificates: true
        allow_default_init_securityindex: true
        authcz:
          admin_dn:
            - CN=kirk,OU=client,O=client,L=test,C=de
        audit.type: internal_opensearch
        enable_snapshot_restore_privilege: true
        check_snapshot_restore_write_privileges: true
        restapi:
          roles_enabled: ["all_access", "security_rest_api_access"]
        system_indices:
          enabled: true
          indices:
            [
              ".opendistro-alerting-config",
              ".opendistro-alerting-alert*",
              ".opendistro-anomaly-results*",
              ".opendistro-anomaly-detector*",
              ".opendistro-anomaly-checkpoints",
              ".opendistro-anomaly-detection-state",
              ".opendistro-reports-*",
              ".opendistro-notifications-*",
              ".opendistro-notebooks",
              ".opendistro-asynchronous-search-response*",
            ]
    #compatibility.override_main_response_version: true
